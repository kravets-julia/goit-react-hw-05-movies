{"version":3,"file":"static/js/168.96e586ca.chunk.js","mappings":"6OACA,EAA8B,6BAA9B,EAAyE,6B,SC8CzE,EA3CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,sCACXC,EAAU,mCAehB,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAC4BC,MAAM,GAAD,OAC1BH,GAD0B,OACfL,EADe,4BACYM,IACzCG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IAHZ,UAIqC,MAH7BC,EADR,QAIkBC,QAAQC,OAJ1B,0CAKW,4EALX,OAMEV,EAAWQ,EAAYC,SANzB,4CADc,uBAAC,WAAD,wBAWdE,EACD,GAAE,CAACf,IACCG,EAGL,OAAuB,IAAnBA,EAAQW,QACH,2DAIP,iCACIX,IAAW,4DACZA,IACC,wBACGA,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAaC,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,qBAAwCJ,MACxC,uBAAIC,MAFGC,EADE,QAUtB,C,sBC9CD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsText\":\"Reviews_reviewsText__pIre-\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const API_KEY = '1d813bdf96a00323bd29d62e55126d30';\n\n  useEffect(() => {\n    async function fetchReviews() {\n      const filmsReview = await fetch(\n        `${BASE_URL}${movieId}/reviews?api_key=${API_KEY}`\n      ).then(res => res.json());\n      if (filmsReview.results.length === '')\n        return <p>Sorry! We don`t have any reviews for this movie</p>;\n      setReviews(filmsReview.results);\n      // console.log(filmsReview.results.length);\n    }\n\n    fetchReviews();\n  }, [movieId]);\n  if (!reviews) {\n    return;\n  }\n  if (reviews.length === 0) {\n    return <p>We don't have any information.</p>;\n  }\n\n  return (\n    <>\n      {!reviews && <div>We don't have any information.</div>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id} className={css.reviewsList}>\n              <p className={css.reviewsText}>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","BASE_URL","API_KEY","useEffect","fetch","then","res","json","filmsReview","results","length","fetchReviews","map","author","content","id","className","css","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}