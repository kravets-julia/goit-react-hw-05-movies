{"version":3,"file":"static/js/779.a312fc5b.chunk.js","mappings":"0NACA,EAAmC,2CAAnC,EAAkG,4CAAlG,EAAiK,2C,SCgCjK,EA7ByB,SAAC,GAOnB,IANLA,EAMI,EANJA,OACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEMC,EAAO,IAAIC,KAAKL,GAAMM,iBACtBC,EAAmBC,KAAKC,MAAgB,GAAVR,GAC9BS,EAASP,EAAUQ,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,MAEnD,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKC,IAAG,yCAAoCnB,GAAUoB,IAAI,YAC1D,4BACE,gBAAIH,UAAWC,EAAf,UACGjB,EADH,KACYK,EADZ,QAGA,eAAGW,UAAWC,EAAd,yBAAiDT,EAAjD,QACA,sCACA,cAAGQ,UAAWC,EAAd,SAAqCd,KACrC,oCACA,cAAGa,UAAWC,EAAd,SAAqCN,SAI5C,EC9BD,EAAmC,uCAAnC,EAAwF,kCAAxF,EAAwI,kCCkFxI,EA7EsB,WAAO,IAAD,IAClBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAoC3D,OAlCAC,EAAAA,EAAAA,YAAU,WAIRC,MAAM,GAAD,OAHY,uCAGZ,OAAeZ,EAAf,oBAFW,qCAGba,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MACC,YAOO,IANLjC,EAMI,EANJA,MACAoC,EAKI,EALJA,YACAzB,EAII,EAJJA,OACAR,EAGI,EAHJA,SACAkC,EAEI,EAFJA,aACAC,EACI,EADJA,aAUAd,EARkB,CAChBxB,MAAAA,EACAoC,YAAAA,EACAzB,OAAAA,EACAR,SAAAA,EACAkC,aAAAA,EACAC,aAAAA,GAGH,IAEFC,OAAM,SAAAC,GAEL,MADAC,MAAM,sBACAD,CACP,GAGJ,GAAE,CAACpB,KAGF,iCACE,SAAC,KAAD,CAAMsB,GAAIf,EAAoBgB,QAA9B,qBACCpB,IACC,iCACE,SAAC,EAAD,CACExB,OAAQwB,EAAMa,YACdpC,MAAOuB,EAAMvB,MACbC,KAAMsB,EAAMc,aACZnC,QAASqB,EAAMe,aACfnC,SAAUoB,EAAMpB,SAChBC,UAAWmB,EAAMZ,UAEnB,4BACE,oDACA,gBAAIK,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMyB,GAAG,OAAO1B,UAAWC,EAA3B,qBAIF,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMyB,GAAG,UAAU1B,UAAWC,EAA9B,8BAMN,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["webpack://react-homework-template/./src/components/MovieDetailsInfo/MovieDetailsInfo.module.css?3ddb","components/MovieDetailsInfo/MovieDetailsInfo.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsInfo\":\"MovieDetailsInfo_movieDetailsInfo__5wP1R\",\"movieDetailsTitle\":\"MovieDetailsInfo_movieDetailsTitle__9tBrg\",\"movieDetailsText\":\"MovieDetailsInfo_movieDetailsText__7vbkz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './MovieDetailsInfo.module.css';\n\nconst MovieDetailsInfo = ({\n  poster,\n  title,\n  date,\n  average,\n  overview,\n  genresObj,\n}) => {\n  const year = new Date(date).getUTCFullYear();\n  const averageInPercent = Math.round(average * 10);\n  const genres = genresObj.map(gen => gen.name).join(', ');\n\n  return (\n    <div className={css.movieDetailsInfo}>\n      <img src={`https://image.tmdb.org/t/p/w500${poster}`} alt=\"poster\" />\n      <div>\n        <h2 className={css.movieDetailsTitle}>\n          {title} ({year})\n        </h2>\n        <p className={css.movieDetailsText}>User Score: {averageInPercent}%</p>\n        <h3>Owerview</h3>\n        <p className={css.movieDetailsText}>{overview}</p>\n        <h3>Genres</h3>\n        <p className={css.movieDetailsText}>{genres}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsInfo;\n\nMovieDetailsInfo.propTypes = {\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  average: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genresObj: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"detailsContainer\":\"MovieDetails_detailsContainer__Y0Fjr\",\"detailsLink\":\"MovieDetails_detailsLink__DSsAQ\",\"detailsItem\":\"MovieDetails_detailsItem__zRuv1\"};","import { Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDetailsInfo from 'components/MovieDetailsInfo/MovieDetailsInfo';\nimport css from './MovieDetails.module.css';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n    const API_KEY = '1d813bdf96a00323bd29d62e55126d30';\n\n    fetch(`${BASE_URL}${movieId}?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(\n        ({\n          title,\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          vote_average,\n        }) => {\n          const movieData = {\n            title,\n            poster_path,\n            genres,\n            overview,\n            release_date,\n            vote_average,\n          };\n          setMovie(movieData);\n        }\n      )\n      .catch(error => {\n        alert('Something wrong...');\n        throw error;\n      });\n\n    //   return(movie)\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      {movie && (\n        <>\n          <MovieDetailsInfo\n            poster={movie.poster_path}\n            title={movie.title}\n            date={movie.release_date}\n            average={movie.vote_average}\n            overview={movie.overview}\n            genresObj={movie.genres}\n          />\n          <div>\n            <h3>Additional information</h3>\n            <ul className={css.detailsContainer}>\n              <li className={css.detailsItem}>\n                <Link to=\"cast\" className={css.detailsLink}>\n                  Cast\n                </Link>\n              </li>\n              <li className={css.detailsItem}>\n                <Link to=\"reviews\" className={css.detailsLink}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["poster","title","date","average","overview","genresObj","year","Date","getUTCFullYear","averageInPercent","Math","round","genres","map","gen","name","join","className","css","src","alt","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetch","then","res","json","poster_path","release_date","vote_average","catch","error","alert","to","current","Suspense","fallback"],"sourceRoot":""}